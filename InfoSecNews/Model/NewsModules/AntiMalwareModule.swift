//
//  AntiMalwareModule.swift
//  InfoSecNews
//
//  Created by Roman Zheglov on 08.03.2025.
//

import Foundation
import SwiftSoup

final class AntiMalwareModule: NewsProvider {
    var baseUrl: URL = .init(string: "https://www.anti-malware.ru/news")!
    var moduleName: String = "Anti-Malware"
    var pageNumber: Int = -1

    var currentUrlString: URL { URL(string: "https://www.anti-malware.ru/news?page=\(pageNumber)")! }
    var nextUrlString: URL { URL(string: "https://www.anti-malware.ru/news?page=\(pageNumber + 1)")! }

    func parse(input html: String) -> [AntiMalwareNews] {
        guard let htDoc = try? SwiftSoup.parse(html),
              let htmlNews = try? htDoc.select(".node-news")
        else {
            return []
        }

        var news: [AntiMalwareNews] = []

        for item in htmlNews {
            var newsTitle: String?
            var newsDate: Date?
            var newsShort: String?
            var newsFullLink: URL?

            if let title = try? item.select("h2").text() {
                newsTitle = title
            }

            if let date = try? item.select(".submitted").text() {
                var parsedDate = date
                parsedDate.trimPrefix(while: { $0 != " " })
                parsedDate = parsedDate.trimmingCharacters(in: [" "])
                parsedDate.trimPrefix(while: { $0 != " " })
                parsedDate = parsedDate.trimmingCharacters(in: [" "])
                let dateFormatter = DateFormatter()
                dateFormatter.locale = Locale(identifier: "ru_RU")
                dateFormatter.dateFormat = "dd MMMM yyyy - HH:mm"
                newsDate = dateFormatter.date(from: parsedDate)
            }

            if let short = try? item.select(".content p").first() {
                newsShort = short.textNodes().last?.text()
            }

            if let link = try? item.select("h2 a").first() {
                if let textLink = try? ("https://www.anti-malware.ru\(link.attr("href"))") {
                    newsFullLink = URL(string: textLink)
                }
            }

            if newsTitle?.isEmpty ?? true,
               newsDate == nil,
               newsShort?.isEmpty ?? true
            {
                continue
            }

            guard let newsTitle = newsTitle,
                  let newsDate = newsDate,
                  let newsShort = newsShort,
                  let newsFullLink = newsFullLink
            else {
                continue
            }

            news.append(
                AntiMalwareNews(
                    source: moduleName,
                    title: newsTitle.trimmingCharacters(in: .whitespaces),
                    date: newsDate,
                    short: newsShort.trimmingCharacters(in: .whitespaces),
                    fullTextLink: newsFullLink
                ))
        }
        return news
    }
}
